[
    {
        "id": "fb5738a77d24f8d4",
        "type": "tab",
        "label": "Survey generator",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "af0e239fff0b28cb",
        "type": "group",
        "z": "fb5738a77d24f8d4",
        "name": "Credentials",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "8ecbfc06bc9f14e6",
            "546fccd91bd0c1fe",
            "56b615fdae6f5b7a",
            "7b18f9005dfed6d8",
            "2947b0da37b1b5bf",
            "4794739f0ca7f4d4",
            "4f4297eea101504b",
            "54d3949016ccd055",
            "70fa563524bce094",
            "22ca0fc049e4fb3a",
            "9e2c5ec10d494689",
            "57ec30d9da3742eb",
            "f3f0cea32f89e7ca",
            "b35713f8d22c2279"
        ],
        "x": 34,
        "y": 119,
        "w": 992,
        "h": 282
    },
    {
        "id": "81010ac89e2578ce",
        "type": "group",
        "z": "fb5738a77d24f8d4",
        "name": "LInks",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "e6f8cad1b65ca144",
            "b3f5ed024160118c",
            "4deaa9b0d8ad4d5a",
            "08beb73ed61742bd",
            "5062046f510fd611",
            "e3ba8759d1474ebe"
        ],
        "x": 1094,
        "y": 119,
        "w": 422,
        "h": 182
    },
    {
        "id": "f168eeb2f9b6dc07",
        "type": "mongodb",
        "hostname": "${MONGO-HOST-NAME}",
        "topology": "direct",
        "connectOptions": "authSource=admin",
        "port": "27017",
        "db": "${MONGO-DB-NAME}",
        "name": ""
    },
    {
        "id": "8ecbfc06bc9f14e6",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "url": "/saveCredentials",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "70fa563524bce094"
            ]
        ]
    },
    {
        "id": "546fccd91bd0c1fe",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "response credentials",
        "statusCode": "",
        "headers": {},
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "56b615fdae6f5b7a",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "url": "/getCredentials",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "7b18f9005dfed6d8"
            ]
        ]
    },
    {
        "id": "7b18f9005dfed6d8",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "sortCredentials",
        "func": "msg.collection = 'credentials';\nmsg.payload = {};\nmsg.sort = { '_id': -1 };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "4f4297eea101504b"
            ]
        ]
    },
    {
        "id": "2947b0da37b1b5bf",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "4794739f0ca7f4d4",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "getLastCredential",
        "func": "\nif (msg.payload.length > 0) {\n    msg.payload = msg.payload[0];\n} else {\n    msg.payload = {\n        \"_id\": '',\n        \"openAIKey\": '',\n        \"model\": '',\n        \"context\": '',\n        \"goal\": '',\n        \"number\": ''\n        \n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "2947b0da37b1b5bf"
            ]
        ]
    },
    {
        "id": "4f4297eea101504b",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "find",
        "links": [
            "e6f8cad1b65ca144"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 240,
        "wires": [
            [
                "4794739f0ca7f4d4"
            ]
        ]
    },
    {
        "id": "54d3949016ccd055",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "insert",
        "links": [
            "4deaa9b0d8ad4d5a"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "546fccd91bd0c1fe"
            ]
        ]
    },
    {
        "id": "70fa563524bce094",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "setCollection",
        "func": "msg.collection = 'credentials';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "54d3949016ccd055"
            ]
        ]
    },
    {
        "id": "22ca0fc049e4fb3a",
        "type": "complete",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "scope": [
            "546fccd91bd0c1fe"
        ],
        "uncaught": false,
        "x": 150,
        "y": 320,
        "wires": [
            [
                "57ec30d9da3742eb"
            ]
        ]
    },
    {
        "id": "9e2c5ec10d494689",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "57ec30d9da3742eb"
            ]
        ]
    },
    {
        "id": "57ec30d9da3742eb",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "getLastCredential",
        "func": "msg.collection = 'credentials';\nmsg.payload = {};\nmsg.sort = { '_id': -1 };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "b35713f8d22c2279"
            ]
        ]
    },
    {
        "id": "f3f0cea32f89e7ca",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "saveCurentCredentialToGlobal",
        "func": "const data = msg.payload[0];\n\nlet process_env = {\n    \"_id\": data._id,\n    \"openAIKey\": data.openAIKey ? data.openAIKey.trim() : '',\n    \"model\": data.model ? data.model.trim() : '',\n    \"context\": data.context ? data.context.trim() : '',\n    \"goal\": data.goal ? data.goal.trim() : '',\n    \"number\": data.number ? data.number.trim() : ''\n    \n}\n\nglobal.set(\"credential\", process_env);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b35713f8d22c2279",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "find",
        "links": [
            "e6f8cad1b65ca144"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 340,
        "wires": [
            [
                "f3f0cea32f89e7ca"
            ]
        ]
    },
    {
        "id": "c68c75fac53ea377",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "582a6268302445b6"
            ]
        ]
    },
    {
        "id": "582a6268302445b6",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "name": "deleteCollection",
        "func": "msg.collection = 'credentials';\nmsg.payload= {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 620,
        "wires": [
            [
                "e7020a361461f03a"
            ]
        ]
    },
    {
        "id": "b7ab102cf9517aa7",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "url": "/css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "ec25cd2e1b3a4c03"
            ]
        ]
    },
    {
        "id": "bd563a0724955d05",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/css"
        },
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "ec25cd2e1b3a4c03",
        "type": "template",
        "z": "fb5738a77d24f8d4",
        "name": "customCSS",
        "field": "payload",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "body div {\n  padding: 0 !important;\n }\n\n.main_container {\n  top:0 !important;\n  left: 0 !important; \n  height: 100vh !important;\n  width: 100% !important;\n}\n.canvas {\n  height:inherit !important; \n}\n.bp3-input, .select-button {\n    border-radius: 5px !important;\n    color: #495894 !important;\n}\n.select-button span {\n    color: inherit !important;\n}\n/* __________LEFT SIDE__________________ */\n.title .bp3-ui-text {\n   font-size: clamp(20px, 2.3vw, 50px) !important; \n   cursor: default !important;\n}\n.content_container {\nheight: 100vh !important;\ntop:0 !important;\nleft: 0 !important;\nwidth: 45% !important;\n}\n\n\n/* __________RIGHT SIDE__________________ */\n.survey_form {\nheight: 100vh !important;\ntop:0 !important;\nwidth: 55% !important;\nleft: 45% !important;\nborder: none !important;\npadding: 20px !important;\noverflow: auto !important;\n}\n.text_container{\n  height: 50% !important;\n}\n.generate_btn{\n  width: 100% !important;\n  padding-left: 10px !important;\n  padding-right: 35px !important;\n}\n.generate_btn span{\n    color: #FFFFFF !important;\n}\n.answers{\n  height: fit-content !important;\n}\n.answers >div >div >div >div >div {\n  border-radius: 5px;\n  padding: 7px !important;\n}\n",
        "output": "str",
        "x": 270,
        "y": 60,
        "wires": [
            [
                "bd563a0724955d05"
            ]
        ]
    },
    {
        "id": "e7020a361461f03a",
        "type": "mongodb out",
        "z": "fb5738a77d24f8d4",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "",
        "collection": "credentials",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 640,
        "y": 620,
        "wires": []
    },
    {
        "id": "55d5db6359a0fa94",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "name": "make request",
        "func": "const credential = global.get('credential');\n\nmsg.OPENAI_API_KEY = credential.openAIKey;\nmsg.model = credential.model;\n// msg.prompt = `Create a poll-only question without an answer option based on specific criteria:Context: ${credential.context}.Goal: ${credential.goal}.Based on the above context and goal generate ${credential.number} of survey questions;`;\nmsg.messages= [\n    {\n        role: \"system\",\n        content: \"You are a helpful helper created only to create survey questions with no multiple choice answers based on specific user-supplied criteria\",\n    },\n    { role: \"user\", content: `Context: ${credential.context}.Goal: ${credential.goal }. Number of survey questions is: ${ credential.number }` },\n];\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "abaccb29fd60f0c9"
            ]
        ]
    },
    {
        "id": "abaccb29fd60f0c9",
        "type": "openai-ubos",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "model": "gpt-3.5-turbo",
        "temperature": 0.5,
        "max_tokens": 500,
        "prompt": "",
        "frequency_penalty": 0,
        "presence_penalty": 0,
        "top_p": 1,
        "stop": {
            "type": "json",
            "value": "[]"
        },
        "OPENAI_API_KEY": "",
        "x": 520,
        "y": 480,
        "wires": [
            [
                "baf4fee8d569cfa9"
            ]
        ]
    },
    {
        "id": "baf4fee8d569cfa9",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "name": "response",
        "func": "if(msg.statusCode === 200){\n    const answers = msg.payload.choices[0].message.content\n    msg.payload= answers;\n}\nelse {\n    msg.payload = \"Ooops, something went wrong!\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 480,
        "wires": [
            [
                "7e57c7bee4ce47fe"
            ]
        ]
    },
    {
        "id": "d02c1888b7d51e21",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "url": "/generate",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "55d5db6359a0fa94"
            ]
        ]
    },
    {
        "id": "7e57c7bee4ce47fe",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "e6f8cad1b65ca144",
        "type": "link in",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "name": "findDB",
        "links": [],
        "x": 1170,
        "y": 160,
        "wires": [
            [
                "e3ba8759d1474ebe"
            ]
        ],
        "l": true
    },
    {
        "id": "b3f5ed024160118c",
        "type": "link out",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "name": "link out 6",
        "mode": "return",
        "links": [],
        "x": 1475,
        "y": 160,
        "wires": []
    },
    {
        "id": "4deaa9b0d8ad4d5a",
        "type": "link in",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "name": "insertDB",
        "links": [],
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "5062046f510fd611",
                "08beb73ed61742bd"
            ]
        ],
        "l": true
    },
    {
        "id": "08beb73ed61742bd",
        "type": "link out",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "name": "link out 7",
        "mode": "return",
        "links": [],
        "x": 1295,
        "y": 260,
        "wires": []
    },
    {
        "id": "5062046f510fd611",
        "type": "mongodb out",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "MongoDB",
        "collection": "",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 220,
        "wires": []
    },
    {
        "id": "e3ba8759d1474ebe",
        "type": "mongodb in",
        "z": "fb5738a77d24f8d4",
        "g": "81010ac89e2578ce",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "MongoDB",
        "collection": "",
        "operation": "find",
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "b3f5ed024160118c"
            ]
        ]
    },
    {
        "id": "d1a4dfc3923a698c",
        "type": "catch",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 540,
        "wires": [
            [
                "3ddddace26481a2a"
            ]
        ]
    },
    {
        "id": "3ddddace26481a2a",
        "type": "debug",
        "z": "fb5738a77d24f8d4",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "91a5d059ba75613e",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "55d5db6359a0fa94"
            ]
        ]
    }
]